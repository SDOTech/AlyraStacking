{
  "contractName": "AlyraStaking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sdoAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_stakingUserBalance",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUsed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "lastTransactionDate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stakeToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getUserBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSDOTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sdoAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_stakingUserBalance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastTransactionDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSDOTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getUserBalance(address,address)\":{\"params\":{\"tokenAddress\":\"address of the staked token\",\"userAddress\":\"address of the user\"}},\"stakeToken(address,uint256)\":{\"params\":{\"amount\":\"staked amount\",\"tokenAddress\":\"address of the staked token\"}},\"withdrawTokens(address,uint256)\":{\"params\":{\"amount\":\"amount to withdraw\",\"tokenAddress\":\"address of the staked token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getSDOTokenAddress()\":{\"notice\":\"Return address of RewardToken\"},\"getStakedTokens()\":{\"notice\":\"Return list of user's tokens staked on contract\"},\"getUserBalance(address,address)\":{\"notice\":\"Stake an amount of a specific ERC20 token\"},\"stakeToken(address,uint256)\":{\"notice\":\"Stake an amount of a specific ERC20 token\"},\"withdrawTokens(address,uint256)\":{\"notice\":\"Withdraw an amount of a specific token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AlyraStaking.sol\":\"AlyraStaking\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/AlyraStaking.sol\":{\"keccak256\":\"0xd8052dde0aac3361ddf46cebb3e306aae331f7299229c4da24a71d2d2402647c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3ea22a2e24134a7b4aa3d1d2ef4c742bebd65d8b9ba2f9cc3a78ff326765803\",\"dweb:/ipfs/QmNdDmaYF5F58UxUGkMfzJWFHwHFJKhxuGG4rFGm8sqHU2\"]},\"project:/contracts/PriceConsumerV3.sol\":{\"keccak256\":\"0x66d0efb04f79e87a11610c60c6c46d27176091abf6e5ca90e27f67fae1886bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56fbf3f5dd9c84c95c0535d3b578cdbc479cb6e88f383197cb32f1c8097df706\",\"dweb:/ipfs/Qmcodb1PoY1GnFrEsUHWdsD678yvdDuQwRUgN2cjMKKJjH\"]}},\"version\":1}",
  "bytecode": "0x60806040526040516200001290620000ea565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200007d57600080fd5b5060405162001753380380620017538339818101604052810190620000a3919062000162565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000194565b61037680620013dd83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012a82620000fd565b9050919050565b6200013c816200011d565b81146200014857600080fd5b50565b6000815190506200015c8162000131565b92915050565b6000602082840312156200017b576200017a620000f8565b5b60006200018b848285016200014b565b91505092915050565b61123980620001a46000396000f3fe608060405234801561001057600080fd5b506004361061007f576000357c01000000000000000000000000000000000000000000000000000000009004806306b091f9146100845780630e469a7c146100a05780631a21dfb1146100be57806344954355146100dc5780636805d6ad1461010f578063f739ed9e1461013f575b600080fd5b61009e60048036038101906100999190610c70565b61016f565b005b6100a8610537565b6040516100b59190610d6e565b60405180910390f35b6100c6610602565b6040516100d39190610d9f565b60405180910390f35b6100f660048036038101906100f19190610dba565b61062b565b6040516101069493929190610e24565b60405180910390f35b61012960048036038101906101249190610dba565b610695565b6040516101369190610e69565b60405180910390f35b61015960048036038101906101549190610c70565b61071f565b6040516101669190610e69565b60405180910390f35b600081116101b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a990610ee1565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610f73565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541015610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d90611005565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161038d929190611025565b602060405180830381600087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df919061107a565b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461046f91906110d6565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055507fa2bd9fcfcdba69f52bcd9a520846ad4bd685b187483f53efc42d035b2ddebff0828260405161052b929190611025565b60405180910390a15050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156105f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105ae575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16908060030154905084565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905092915050565b6000808211610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a90611156565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107bc93929190611176565b602060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e919061107a565b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610a7f57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815260200142815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055506060820151816003015590505050610b16565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610b0e91906111ad565b925050819055505b7f1fdab8a8457aaf782e4b6217d6ffa6f5006eda7e50922dd092b2e1524275d7748383604051610b47929190611025565b60405180910390a1600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0782610bdc565b9050919050565b610c1781610bfc565b8114610c2257600080fd5b50565b600081359050610c3481610c0e565b92915050565b6000819050919050565b610c4d81610c3a565b8114610c5857600080fd5b50565b600081359050610c6a81610c44565b92915050565b60008060408385031215610c8757610c86610bd7565b5b6000610c9585828601610c25565b9250506020610ca685828601610c5b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ce581610bfc565b82525050565b6000610cf78383610cdc565b60208301905092915050565b6000602082019050919050565b6000610d1b82610cb0565b610d258185610cbb565b9350610d3083610ccc565b8060005b83811015610d61578151610d488882610ceb565b9750610d5383610d03565b925050600181019050610d34565b5085935050505092915050565b60006020820190508181036000830152610d888184610d10565b905092915050565b610d9981610bfc565b82525050565b6000602082019050610db46000830184610d90565b92915050565b60008060408385031215610dd157610dd0610bd7565b5b6000610ddf85828601610c25565b9250506020610df085828601610c25565b9150509250929050565b610e0381610c3a565b82525050565b60008115159050919050565b610e1e81610e09565b82525050565b6000608082019050610e396000830187610d90565b610e466020830186610dfa565b610e536040830185610e15565b610e606060830184610dfa565b95945050505050565b6000602082019050610e7e6000830184610dfa565b92915050565b600082825260208201905092915050565b7f596f752063616e6e6f74207769746864726177203020746f6b656e2021000000600082015250565b6000610ecb601d83610e84565b9150610ed682610e95565b602082019050919050565b60006020820190508181036000830152610efa81610ebe565b9050919050565b7f5468697320746f6b656e206e6576657220737461636b6564206f6e207468697360008201527f20636f6e74726163742021000000000000000000000000000000000000000000602082015250565b6000610f5d602b83610e84565b9150610f6882610f01565b604082019050919050565b60006020820190508181036000830152610f8c81610f50565b9050919050565b7f43616e6e6f7420776974686472617720616e20616d6f756e742062696767657260008201527f207468616e20737461636b656420210000000000000000000000000000000000602082015250565b6000610fef602f83610e84565b9150610ffa82610f93565b604082019050919050565b6000602082019050818103600083015261101e81610fe2565b9050919050565b600060408201905061103a6000830185610d90565b6110476020830184610dfa565b9392505050565b61105781610e09565b811461106257600080fd5b50565b6000815190506110748161104e565b92915050565b6000602082840312156110905761108f610bd7565b5b600061109e84828501611065565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110e182610c3a565b91506110ec83610c3a565b9250828210156110ff576110fe6110a7565b5b828203905092915050565b7f596f752063616e6e6f74207374616b65203020746f6b656e0000000000000000600082015250565b6000611140601883610e84565b915061114b8261110a565b602082019050919050565b6000602082019050818103600083015261116f81611133565b9050919050565b600060608201905061118b6000830186610d90565b6111986020830185610d90565b6111a56040830184610dfa565b949350505050565b60006111b882610c3a565b91506111c383610c3a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111f8576111f76110a7565b5b82820190509291505056fea26469706673582212203bb1e53d01c13564cf1e713d6ae4835a0ec72d4e56df434a96f6412cfa9780a164736f6c63430008090033608060405234801561001057600080fd5b50610356806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c01000000000000000000000000000000000000000000000000000000009004806316345f181461004d575b600080fd5b610067600480360381019061006291906101a0565b61007d565b60405161007491906101e6565b60405180910390f35b60008082905060008060008060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160a06040518083038186803b1580156100ed57600080fd5b505afa158015610101573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012591906102a5565b94509450945094509450839650505050505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061016d82610142565b9050919050565b61017d81610162565b811461018857600080fd5b50565b60008135905061019a81610174565b92915050565b6000602082840312156101b6576101b561013d565b5b60006101c48482850161018b565b91505092915050565b6000819050919050565b6101e0816101cd565b82525050565b60006020820190506101fb60008301846101d7565b92915050565b600069ffffffffffffffffffff82169050919050565b61022081610201565b811461022b57600080fd5b50565b60008151905061023d81610217565b92915050565b61024c816101cd565b811461025757600080fd5b50565b60008151905061026981610243565b92915050565b6000819050919050565b6102828161026f565b811461028d57600080fd5b50565b60008151905061029f81610279565b92915050565b600080600080600060a086880312156102c1576102c061013d565b5b60006102cf8882890161022e565b95505060206102e08882890161025a565b94505060406102f188828901610290565b935050606061030288828901610290565b92505060806103138882890161022e565b915050929550929590935056fea26469706673582212202e26c7d2e6c73787202d81bdd92243cad505428472ccde0b2f49f5ff1fa62b1464736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007f576000357c01000000000000000000000000000000000000000000000000000000009004806306b091f9146100845780630e469a7c146100a05780631a21dfb1146100be57806344954355146100dc5780636805d6ad1461010f578063f739ed9e1461013f575b600080fd5b61009e60048036038101906100999190610c70565b61016f565b005b6100a8610537565b6040516100b59190610d6e565b60405180910390f35b6100c6610602565b6040516100d39190610d9f565b60405180910390f35b6100f660048036038101906100f19190610dba565b61062b565b6040516101069493929190610e24565b60405180910390f35b61012960048036038101906101249190610dba565b610695565b6040516101369190610e69565b60405180910390f35b61015960048036038101906101549190610c70565b61071f565b6040516101669190610e69565b60405180910390f35b600081116101b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a990610ee1565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610f73565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541015610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d90611005565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161038d929190611025565b602060405180830381600087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df919061107a565b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461046f91906110d6565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055507fa2bd9fcfcdba69f52bcd9a520846ad4bd685b187483f53efc42d035b2ddebff0828260405161052b929190611025565b60405180910390a15050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156105f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105ae575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16908060030154905084565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905092915050565b6000808211610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a90611156565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107bc93929190611176565b602060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e919061107a565b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610a7f57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815260200142815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055506060820151816003015590505050610b16565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610b0e91906111ad565b925050819055505b7f1fdab8a8457aaf782e4b6217d6ffa6f5006eda7e50922dd092b2e1524275d7748383604051610b47929190611025565b60405180910390a1600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0782610bdc565b9050919050565b610c1781610bfc565b8114610c2257600080fd5b50565b600081359050610c3481610c0e565b92915050565b6000819050919050565b610c4d81610c3a565b8114610c5857600080fd5b50565b600081359050610c6a81610c44565b92915050565b60008060408385031215610c8757610c86610bd7565b5b6000610c9585828601610c25565b9250506020610ca685828601610c5b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ce581610bfc565b82525050565b6000610cf78383610cdc565b60208301905092915050565b6000602082019050919050565b6000610d1b82610cb0565b610d258185610cbb565b9350610d3083610ccc565b8060005b83811015610d61578151610d488882610ceb565b9750610d5383610d03565b925050600181019050610d34565b5085935050505092915050565b60006020820190508181036000830152610d888184610d10565b905092915050565b610d9981610bfc565b82525050565b6000602082019050610db46000830184610d90565b92915050565b60008060408385031215610dd157610dd0610bd7565b5b6000610ddf85828601610c25565b9250506020610df085828601610c25565b9150509250929050565b610e0381610c3a565b82525050565b60008115159050919050565b610e1e81610e09565b82525050565b6000608082019050610e396000830187610d90565b610e466020830186610dfa565b610e536040830185610e15565b610e606060830184610dfa565b95945050505050565b6000602082019050610e7e6000830184610dfa565b92915050565b600082825260208201905092915050565b7f596f752063616e6e6f74207769746864726177203020746f6b656e2021000000600082015250565b6000610ecb601d83610e84565b9150610ed682610e95565b602082019050919050565b60006020820190508181036000830152610efa81610ebe565b9050919050565b7f5468697320746f6b656e206e6576657220737461636b6564206f6e207468697360008201527f20636f6e74726163742021000000000000000000000000000000000000000000602082015250565b6000610f5d602b83610e84565b9150610f6882610f01565b604082019050919050565b60006020820190508181036000830152610f8c81610f50565b9050919050565b7f43616e6e6f7420776974686472617720616e20616d6f756e742062696767657260008201527f207468616e20737461636b656420210000000000000000000000000000000000602082015250565b6000610fef602f83610e84565b9150610ffa82610f93565b604082019050919050565b6000602082019050818103600083015261101e81610fe2565b9050919050565b600060408201905061103a6000830185610d90565b6110476020830184610dfa565b9392505050565b61105781610e09565b811461106257600080fd5b50565b6000815190506110748161104e565b92915050565b6000602082840312156110905761108f610bd7565b5b600061109e84828501611065565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110e182610c3a565b91506110ec83610c3a565b9250828210156110ff576110fe6110a7565b5b828203905092915050565b7f596f752063616e6e6f74207374616b65203020746f6b656e0000000000000000600082015250565b6000611140601883610e84565b915061114b8261110a565b602082019050919050565b6000602082019050818103600083015261116f81611133565b9050919050565b600060608201905061118b6000830186610d90565b6111986020830185610d90565b6111a56040830184610dfa565b949350505050565b60006111b882610c3a565b91506111c383610c3a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111f8576111f76110a7565b5b82820190509291505056fea26469706673582212203bb1e53d01c13564cf1e713d6ae4835a0ec72d4e56df434a96f6412cfa9780a164736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:10",
                "type": ""
              }
            ],
            "src": "334:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:10",
                "type": ""
              }
            ],
            "src": "466:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:10",
                "type": ""
              }
            ],
            "src": "568:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:10",
                "type": ""
              }
            ],
            "src": "696:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:10",
                "type": ""
              }
            ],
            "src": "845:351:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11929:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:10",
                "type": ""
              }
            ],
            "src": "334:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:10",
                "type": ""
              }
            ],
            "src": "466:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:10",
                "type": ""
              }
            ],
            "src": "568:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:10",
                "type": ""
              }
            ],
            "src": "696:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:10",
                "type": ""
              }
            ],
            "src": "841:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:10",
                "type": ""
              }
            ],
            "src": "924:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:10",
                "type": ""
              }
            ],
            "src": "1052:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1280:391:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1326:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1328:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1310:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1297:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1322:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1293:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1290:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1463:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1498:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1509:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1518:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1473:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1463:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1546:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1561:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1565:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1591:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1626:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1637:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1622:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1646:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1601:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1601:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1591:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1242:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1253:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1265:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1273:6:10",
                "type": ""
              }
            ],
            "src": "1197:474:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1751:40:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1762:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1778:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1772:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1762:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1734:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1744:6:10",
                "type": ""
              }
            ],
            "src": "1677:114:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1908:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1925:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1930:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1918:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1918:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1946:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1965:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1970:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1961:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1961:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1946:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1880:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1885:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1896:11:10",
                "type": ""
              }
            ],
            "src": "1797:184:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2059:60:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2069:11:10",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "2077:3:10"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2069:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2090:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2102:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2107:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2098:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2090:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2046:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2054:4:10",
                "type": ""
              }
            ],
            "src": "1987:132:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2180:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2197:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2220:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2202:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2202:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2190:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2190:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2168:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2175:3:10",
                "type": ""
              }
            ],
            "src": "2125:108:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2319:99:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2363:6:10"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2371:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2329:33:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:46:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2329:46:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2384:28:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2402:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2407:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2398:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2398:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "2384:10:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2292:6:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2300:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "2308:10:10",
                "type": ""
              }
            ],
            "src": "2239:179:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2499:38:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2509:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2521:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2526:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2517:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "2509:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2486:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "2494:4:10",
                "type": ""
              }
            ],
            "src": "2424:113:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2697:608:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2707:68:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2769:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2721:47:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2721:54:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2711:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2784:93:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2865:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2870:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2791:73:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2791:86:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2784:3:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2886:71:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2951:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2901:49:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:56:10"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "2890:7:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2966:21:10",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "2980:7:10"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2970:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3056:224:10",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3070:34:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3097:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3091:5:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3091:13:10"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3074:13:10",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3117:70:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "3168:13:10"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3183:3:10"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "3124:43:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3124:63:10"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3117:3:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3200:70:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3263:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3210:52:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3210:60:10"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3200:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3018:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3021:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3015:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3029:18:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3031:14:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3040:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3043:1:10",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3036:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3036:9:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3031:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3000:14:10",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3002:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3011:1:10",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3006:1:10",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "2996:284:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3289:10:10",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3296:3:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3289:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2676:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2683:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2692:3:10",
                "type": ""
              }
            ],
            "src": "2573:732:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3459:225:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3469:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3481:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3492:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3477:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3477:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3469:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3516:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3527:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3512:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3512:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3535:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3541:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3531:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3531:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3505:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3505:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3505:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3561:116:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3663:6:10"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3672:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3569:93:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3569:108:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3561:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3431:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3443:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3454:4:10",
                "type": ""
              }
            ],
            "src": "3311:373:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3755:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3772:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3795:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3777:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3777:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3765:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3765:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3765:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3743:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3750:3:10",
                "type": ""
              }
            ],
            "src": "3690:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3912:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3922:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3934:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3945:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3930:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3930:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3922:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4002:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4015:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4026:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4011:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4011:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3958:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3958:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3884:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3896:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3907:4:10",
                "type": ""
              }
            ],
            "src": "3814:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4125:391:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4171:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4173:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4173:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4173:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4146:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4155:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4142:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4142:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4167:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4138:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "4135:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4264:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4279:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4293:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4283:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4308:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4343:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4354:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4339:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4339:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4363:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4318:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4308:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4391:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4406:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4420:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4410:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4436:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4471:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4482:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4467:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4467:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4491:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4446:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4446:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4436:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4087:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4098:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4110:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4118:6:10",
                "type": ""
              }
            ],
            "src": "4042:474:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4587:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4604:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4627:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4609:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4609:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4597:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4597:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4575:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4582:3:10",
                "type": ""
              }
            ],
            "src": "4522:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4688:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4698:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4723:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4716:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4716:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4709:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4709:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4698:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4670:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4680:7:10",
                "type": ""
              }
            ],
            "src": "4646:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4801:50:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4818:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4838:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4823:14:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4823:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4811:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4811:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4811:34:10"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4789:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4796:3:10",
                "type": ""
              }
            ],
            "src": "4742:109:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5033:365:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5043:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5055:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5066:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5051:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5051:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5043:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5124:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5137:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5148:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5133:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5133:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5080:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5080:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5080:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5205:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5218:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5229:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5214:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5214:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5161:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5161:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5161:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5281:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5294:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5305:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5290:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5290:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5243:37:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5243:66:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5243:66:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5363:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5376:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5387:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5372:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5372:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5319:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5319:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5319:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_bool_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4981:9:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4993:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5001:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5009:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5017:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5028:4:10",
                "type": ""
              }
            ],
            "src": "4857:541:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5502:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5512:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5524:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5535:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5520:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5520:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5512:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5592:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5605:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5616:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5601:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5601:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5548:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5548:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5548:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5474:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5486:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5497:4:10",
                "type": ""
              }
            ],
            "src": "5404:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5728:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5745:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5750:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5738:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5738:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5738:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5766:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5785:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5790:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5781:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5781:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5766:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5700:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5705:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5716:11:10",
                "type": ""
              }
            ],
            "src": "5632:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5913:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5935:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5943:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5931:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5931:14:10"
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207769746864726177203020746f6b656e2021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5947:31:10",
                        "type": "",
                        "value": "You cannot withdraw 0 token !"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5924:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5924:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5924:55:10"
                }
              ]
            },
            "name": "store_literal_in_memory_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5905:6:10",
                "type": ""
              }
            ],
            "src": "5807:179:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6138:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6148:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6214:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6219:2:10",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6155:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6155:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6148:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6320:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67",
                      "nodeType": "YulIdentifier",
                      "src": "6231:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6231:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6231:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6333:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6344:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6349:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6340:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6340:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6333:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6126:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6134:3:10",
                "type": ""
              }
            ],
            "src": "5992:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6535:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6545:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6557:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6568:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6553:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6553:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6545:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6592:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6603:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6588:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6588:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6611:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6617:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6607:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6607:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6581:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6581:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6581:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6637:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6771:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6645:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6645:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6637:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6515:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6530:4:10",
                "type": ""
              }
            ],
            "src": "6364:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6895:124:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6917:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6925:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6913:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6913:14:10"
                      },
                      {
                        "hexValue": "5468697320746f6b656e206e6576657220737461636b6564206f6e2074686973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6929:34:10",
                        "type": "",
                        "value": "This token never stacked on this"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6906:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6906:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6906:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6985:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6993:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6981:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6981:15:10"
                      },
                      {
                        "hexValue": "20636f6e74726163742021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6998:13:10",
                        "type": "",
                        "value": " contract !"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6974:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6974:38:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6974:38:10"
                }
              ]
            },
            "name": "store_literal_in_memory_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6887:6:10",
                "type": ""
              }
            ],
            "src": "6789:230:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7171:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7181:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7247:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7252:2:10",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7188:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7188:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7181:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7353:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0",
                      "nodeType": "YulIdentifier",
                      "src": "7264:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7264:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7264:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7366:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7377:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7382:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7373:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7373:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7366:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7159:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7167:3:10",
                "type": ""
              }
            ],
            "src": "7025:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7568:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7578:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7590:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7601:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7586:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7586:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7578:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7625:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7636:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7621:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7621:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7644:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7650:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7640:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7640:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7614:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7614:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7614:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7670:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7804:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7678:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7678:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7670:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7548:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7563:4:10",
                "type": ""
              }
            ],
            "src": "7397:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7928:128:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7950:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7958:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7946:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7946:14:10"
                      },
                      {
                        "hexValue": "43616e6e6f7420776974686472617720616e20616d6f756e7420626967676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7962:34:10",
                        "type": "",
                        "value": "Cannot withdraw an amount bigger"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7939:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7939:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7939:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8018:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8026:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8014:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8014:15:10"
                      },
                      {
                        "hexValue": "207468616e20737461636b65642021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8031:17:10",
                        "type": "",
                        "value": " than stacked !"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8007:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8007:42:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8007:42:10"
                }
              ]
            },
            "name": "store_literal_in_memory_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7920:6:10",
                "type": ""
              }
            ],
            "src": "7822:234:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8208:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8218:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8284:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8289:2:10",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8225:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8225:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8218:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8390:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb",
                      "nodeType": "YulIdentifier",
                      "src": "8301:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8301:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8301:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8403:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8414:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8419:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8410:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8410:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8403:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8196:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8204:3:10",
                "type": ""
              }
            ],
            "src": "8062:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8605:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8615:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8627:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8638:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8623:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8623:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8615:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8662:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8673:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8658:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8658:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8681:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8687:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8677:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8677:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8651:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8651:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8651:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8707:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8841:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8715:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8715:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8707:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8585:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8600:4:10",
                "type": ""
              }
            ],
            "src": "8434:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8985:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8995:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9007:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9018:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9003:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9003:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8995:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9075:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9088:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9099:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9084:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9084:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9031:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9031:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9031:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9156:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9169:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9180:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9165:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9165:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9112:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9112:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9112:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8949:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8961:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8969:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8980:4:10",
                "type": ""
              }
            ],
            "src": "8859:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9237:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9291:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9300:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9303:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9293:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9293:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9293:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9260:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9282:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9267:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9267:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9257:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9257:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9250:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9250:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9247:60:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9230:5:10",
                "type": ""
              }
            ],
            "src": "9197:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9379:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9389:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9404:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9398:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9398:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9389:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9444:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "9420:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9420:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9420:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9357:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9365:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9373:5:10",
                "type": ""
              }
            ],
            "src": "9319:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9536:271:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9582:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9584:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9584:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9584:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9557:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9566:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9553:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9553:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9578:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9549:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9549:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9546:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9675:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9690:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9704:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9694:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9719:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9762:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9773:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9758:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9758:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9782:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9729:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9729:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9719:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9506:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9517:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9529:6:10",
                "type": ""
              }
            ],
            "src": "9462:345:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9841:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9858:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9861:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9851:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9851:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9851:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9955:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9958:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9948:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9948:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9948:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9979:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9982:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9972:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9972:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9972:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9813:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10044:146:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10054:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10077:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10059:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10059:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10054:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10088:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10111:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10093:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10093:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10088:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10135:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10137:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10137:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10137:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10129:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10132:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10126:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10126:8:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10123:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10167:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10179:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10182:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10175:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10175:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10167:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10030:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10033:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10039:4:10",
                "type": ""
              }
            ],
            "src": "9999:191:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10302:68:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10324:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10332:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10320:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10320:14:10"
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207374616b65203020746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10336:26:10",
                        "type": "",
                        "value": "You cannot stake 0 token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10313:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10313:50:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10313:50:10"
                }
              ]
            },
            "name": "store_literal_in_memory_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10294:6:10",
                "type": ""
              }
            ],
            "src": "10196:174:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10522:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10532:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10598:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10603:2:10",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10539:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10539:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10532:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10704:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d",
                      "nodeType": "YulIdentifier",
                      "src": "10615:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10615:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10615:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10717:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10728:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10733:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10724:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10724:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10717:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10510:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10518:3:10",
                "type": ""
              }
            ],
            "src": "10376:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10919:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10929:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10941:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10952:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10937:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10937:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10929:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10976:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10987:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10972:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10972:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10995:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11001:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10991:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10991:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10965:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10965:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10965:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11021:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11155:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11029:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11029:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11021:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10899:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10914:4:10",
                "type": ""
              }
            ],
            "src": "10748:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11327:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11337:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11349:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11360:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11345:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11345:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11337:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11417:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11430:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11441:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11426:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11426:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11373:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11373:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11373:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11498:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11511:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11522:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11507:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11507:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11454:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11454:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11454:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11580:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11593:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11604:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11589:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11589:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11536:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11536:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11536:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11283:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11295:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11303:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11311:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11322:4:10",
                "type": ""
              }
            ],
            "src": "11173:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11665:261:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11675:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11698:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11680:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11680:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11675:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11709:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11732:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11714:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11714:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11709:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11872:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11874:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11874:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11874:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11793:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11800:66:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11868:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11796:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11796:74:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11790:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11790:81:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11787:107:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11904:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11915:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11918:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11911:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11911:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11904:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11652:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11655:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11661:3:10",
                "type": ""
              }
            ],
            "src": "11621:305:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot withdraw 0 token !\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token never stacked on this\")\n\n        mstore(add(memPtr, 32), \" contract !\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw an amount bigger\")\n\n        mstore(add(memPtr, 32), \" than stacked !\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot stake 0 token\")\n\n    }\n\n    function abi_encode_t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "210:4015:5:-:0;;;770:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;728:63;;;;;;;;;;;;;;;;;;;;840:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;901:10;883:8;;:29;;;;;;;;;;;;;;;;;;840:80;210:4015;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;210:4015:5:-;;;;;;;",
  "deployedSourceMap": "210:4015:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2969:826;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4099:123;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3923:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:72;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2592:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1329:1091;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2969:826;3066:1;3057:6;:10;3049:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3195:1;3134:19;:31;3154:10;3134:31;;;;;;;;;;;;;;;:45;3166:12;3134:45;;;;;;;;;;;;;;;:58;;;:62;3112:155;;;;;;;;;;;;:::i;:::-;;;;;;;;;3379:6;3300:19;:31;3320:10;3300:31;;;;;;;;;;;;;;;:45;3332:12;3300:45;;;;;;;;;;;;;;;:58;;;:85;;3278:182;;;;;;;;;;;;:::i;:::-;;;;;;;;;3480:12;3473:29;;;3503:10;3515:6;3473:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3597:6;3535:19;:31;3555:10;3535:31;;;;;;;;;;;;;;;:45;3567:12;3535:45;;;;;;;;;;;;;;;:58;;;:68;;;;;;;:::i;:::-;;;;;;;;3696:15;3614:19;:31;3634:10;3614:31;;;;;;;;;;;;;;;:45;3646:12;3614:45;;;;;;;;;;;;;;;:79;;:97;;;;3751:36;3766:12;3780:6;3751:36;;;;;;;:::i;:::-;;;;;;;;2969:826;;:::o;4099:123::-;4147:16;4183:19;:31;4203:10;4183:31;;;;;;;;;;;;;;;4176:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4099:123;:::o;3923:103::-;3974:7;4009:8;;;;;;;;;;;3994:24;;3923:103;:::o;572:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2592:214::-;2707:7;2739:19;:32;2759:11;2739:32;;;;;;;;;;;;;;;:46;2772:12;2739:46;;;;;;;;;;;;;;;:59;;;2732:66;;2592:214;;;;:::o;1329:1091::-;1421:7;1463:1;1454:6;:10;1446:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1557:12;1550:33;;;1584:10;1604:4;1611:6;1550:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1688:19;:31;1708:10;1688:31;;;;;;;;;;;;;;;:45;1720:12;1688:45;;;;;;;;;;;;;;;:52;;;;;;;;;;;;1683:543;;1776:19;:31;1796:10;1776:31;;;;;;;;;;;;;;;1813:12;1776:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1843:22;1868:133;;;;;;;;1892:12;1868:133;;;;;;1923:6;1868:133;;;;1948:4;1868:133;;;;;;1971:15;1868:133;;;1843:158;;2064:9;2016:19;:31;2036:10;2016:31;;;;;;;;;;;;;;;:45;2048:12;2016:45;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1742:343;1683:543;;;2208:6;2128:19;:31;2148:10;2128:31;;;;;;;;;;;;;;;:45;2160:12;2128:45;;;;;;;;;;;;;;;:76;;;:86;;;;;;;:::i;:::-;;;;;;;;1683:543;2301:33;2313:12;2327:6;2301:33;;;;;;;:::i;:::-;;;;;;;;2354:19;:31;2374:10;2354:31;;;;;;;;;;;;;;;:45;2386:12;2354:45;;;;;;;;;;;;;;;:58;;;2347:65;;1329:1091;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:114::-;1744:6;1778:5;1772:12;1762:22;;1677:114;;;:::o;1797:184::-;1896:11;1930:6;1925:3;1918:19;1970:4;1965:3;1961:14;1946:29;;1797:184;;;;:::o;1987:132::-;2054:4;2077:3;2069:11;;2107:4;2102:3;2098:14;2090:22;;1987:132;;;:::o;2125:108::-;2202:24;2220:5;2202:24;:::i;:::-;2197:3;2190:37;2125:108;;:::o;2239:179::-;2308:10;2329:46;2371:3;2363:6;2329:46;:::i;:::-;2407:4;2402:3;2398:14;2384:28;;2239:179;;;;:::o;2424:113::-;2494:4;2526;2521:3;2517:14;2509:22;;2424:113;;;:::o;2573:732::-;2692:3;2721:54;2769:5;2721:54;:::i;:::-;2791:86;2870:6;2865:3;2791:86;:::i;:::-;2784:93;;2901:56;2951:5;2901:56;:::i;:::-;2980:7;3011:1;2996:284;3021:6;3018:1;3015:13;2996:284;;;3097:6;3091:13;3124:63;3183:3;3168:13;3124:63;:::i;:::-;3117:70;;3210:60;3263:6;3210:60;:::i;:::-;3200:70;;3056:224;3043:1;3040;3036:9;3031:14;;2996:284;;;3000:14;3296:3;3289:10;;2697:608;;;2573:732;;;;:::o;3311:373::-;3454:4;3492:2;3481:9;3477:18;3469:26;;3541:9;3535:4;3531:20;3527:1;3516:9;3512:17;3505:47;3569:108;3672:4;3663:6;3569:108;:::i;:::-;3561:116;;3311:373;;;;:::o;3690:118::-;3777:24;3795:5;3777:24;:::i;:::-;3772:3;3765:37;3690:118;;:::o;3814:222::-;3907:4;3945:2;3934:9;3930:18;3922:26;;3958:71;4026:1;4015:9;4011:17;4002:6;3958:71;:::i;:::-;3814:222;;;;:::o;4042:474::-;4110:6;4118;4167:2;4155:9;4146:7;4142:23;4138:32;4135:119;;;4173:79;;:::i;:::-;4135:119;4293:1;4318:53;4363:7;4354:6;4343:9;4339:22;4318:53;:::i;:::-;4308:63;;4264:117;4420:2;4446:53;4491:7;4482:6;4471:9;4467:22;4446:53;:::i;:::-;4436:63;;4391:118;4042:474;;;;;:::o;4522:118::-;4609:24;4627:5;4609:24;:::i;:::-;4604:3;4597:37;4522:118;;:::o;4646:90::-;4680:7;4723:5;4716:13;4709:21;4698:32;;4646:90;;;:::o;4742:109::-;4823:21;4838:5;4823:21;:::i;:::-;4818:3;4811:34;4742:109;;:::o;4857:541::-;5028:4;5066:3;5055:9;5051:19;5043:27;;5080:71;5148:1;5137:9;5133:17;5124:6;5080:71;:::i;:::-;5161:72;5229:2;5218:9;5214:18;5205:6;5161:72;:::i;:::-;5243:66;5305:2;5294:9;5290:18;5281:6;5243:66;:::i;:::-;5319:72;5387:2;5376:9;5372:18;5363:6;5319:72;:::i;:::-;4857:541;;;;;;;:::o;5404:222::-;5497:4;5535:2;5524:9;5520:18;5512:26;;5548:71;5616:1;5605:9;5601:17;5592:6;5548:71;:::i;:::-;5404:222;;;;:::o;5632:169::-;5716:11;5750:6;5745:3;5738:19;5790:4;5785:3;5781:14;5766:29;;5632:169;;;;:::o;5807:179::-;5947:31;5943:1;5935:6;5931:14;5924:55;5807:179;:::o;5992:366::-;6134:3;6155:67;6219:2;6214:3;6155:67;:::i;:::-;6148:74;;6231:93;6320:3;6231:93;:::i;:::-;6349:2;6344:3;6340:12;6333:19;;5992:366;;;:::o;6364:419::-;6530:4;6568:2;6557:9;6553:18;6545:26;;6617:9;6611:4;6607:20;6603:1;6592:9;6588:17;6581:47;6645:131;6771:4;6645:131;:::i;:::-;6637:139;;6364:419;;;:::o;6789:230::-;6929:34;6925:1;6917:6;6913:14;6906:58;6998:13;6993:2;6985:6;6981:15;6974:38;6789:230;:::o;7025:366::-;7167:3;7188:67;7252:2;7247:3;7188:67;:::i;:::-;7181:74;;7264:93;7353:3;7264:93;:::i;:::-;7382:2;7377:3;7373:12;7366:19;;7025:366;;;:::o;7397:419::-;7563:4;7601:2;7590:9;7586:18;7578:26;;7650:9;7644:4;7640:20;7636:1;7625:9;7621:17;7614:47;7678:131;7804:4;7678:131;:::i;:::-;7670:139;;7397:419;;;:::o;7822:234::-;7962:34;7958:1;7950:6;7946:14;7939:58;8031:17;8026:2;8018:6;8014:15;8007:42;7822:234;:::o;8062:366::-;8204:3;8225:67;8289:2;8284:3;8225:67;:::i;:::-;8218:74;;8301:93;8390:3;8301:93;:::i;:::-;8419:2;8414:3;8410:12;8403:19;;8062:366;;;:::o;8434:419::-;8600:4;8638:2;8627:9;8623:18;8615:26;;8687:9;8681:4;8677:20;8673:1;8662:9;8658:17;8651:47;8715:131;8841:4;8715:131;:::i;:::-;8707:139;;8434:419;;;:::o;8859:332::-;8980:4;9018:2;9007:9;9003:18;8995:26;;9031:71;9099:1;9088:9;9084:17;9075:6;9031:71;:::i;:::-;9112:72;9180:2;9169:9;9165:18;9156:6;9112:72;:::i;:::-;8859:332;;;;;:::o;9197:116::-;9267:21;9282:5;9267:21;:::i;:::-;9260:5;9257:32;9247:60;;9303:1;9300;9293:12;9247:60;9197:116;:::o;9319:137::-;9373:5;9404:6;9398:13;9389:22;;9420:30;9444:5;9420:30;:::i;:::-;9319:137;;;;:::o;9462:345::-;9529:6;9578:2;9566:9;9557:7;9553:23;9549:32;9546:119;;;9584:79;;:::i;:::-;9546:119;9704:1;9729:61;9782:7;9773:6;9762:9;9758:22;9729:61;:::i;:::-;9719:71;;9675:125;9462:345;;;;:::o;9813:180::-;9861:77;9858:1;9851:88;9958:4;9955:1;9948:15;9982:4;9979:1;9972:15;9999:191;10039:4;10059:20;10077:1;10059:20;:::i;:::-;10054:25;;10093:20;10111:1;10093:20;:::i;:::-;10088:25;;10132:1;10129;10126:8;10123:34;;;10137:18;;:::i;:::-;10123:34;10182:1;10179;10175:9;10167:17;;9999:191;;;;:::o;10196:174::-;10336:26;10332:1;10324:6;10320:14;10313:50;10196:174;:::o;10376:366::-;10518:3;10539:67;10603:2;10598:3;10539:67;:::i;:::-;10532:74;;10615:93;10704:3;10615:93;:::i;:::-;10733:2;10728:3;10724:12;10717:19;;10376:366;;;:::o;10748:419::-;10914:4;10952:2;10941:9;10937:18;10929:26;;11001:9;10995:4;10991:20;10987:1;10976:9;10972:17;10965:47;11029:131;11155:4;11029:131;:::i;:::-;11021:139;;10748:419;;;:::o;11173:442::-;11322:4;11360:2;11349:9;11345:18;11337:26;;11373:71;11441:1;11430:9;11426:17;11417:6;11373:71;:::i;:::-;11454:72;11522:2;11511:9;11507:18;11498:6;11454:72;:::i;:::-;11536;11604:2;11593:9;11589:18;11580:6;11536:72;:::i;:::-;11173:442;;;;;;:::o;11621:305::-;11661:3;11680:20;11698:1;11680:20;:::i;:::-;11675:25;;11714:20;11732:1;11714:20;:::i;:::-;11709:25;;11868:1;11800:66;11796:74;11793:1;11790:81;11787:107;;;11874:18;;:::i;:::-;11787:107;11918:1;11915;11911:9;11904:16;;11621:305;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./PriceConsumerV3.sol\";\r\n\r\ncontract AlyraStaking {\r\n    IERC20 SdoToken; // the reward token\r\n\r\n    // ========= Entities =========\r\n\r\n    struct Token {\r\n        address tokenAddress;\r\n        uint256 stakedAmount;\r\n        bool isUsed;\r\n        uint256 lastTransactionDate;\r\n    }\r\n\r\n    // ========= Variables =========\r\n\r\n    //_stakingUserBalance between adress token and amount\r\n    mapping(address => mapping(address => Token)) public _stakingUserBalance;\r\n    mapping(address => address[]) _userToTokenAddress;\r\n\r\n    //Oracle init\r\n    PriceConsumerV3 private priceConsumerV3 = new PriceConsumerV3();\r\n\r\n    // ========= Constructor =========\r\n    constructor(address sdoAddress) {\r\n        SdoToken = IERC20(sdoAddress);\r\n    }\r\n\r\n    // ========= Events =========\r\n    event TokenStaked(address tokenAddress, uint256 amount);\r\n    event TokenWithdrawn(address tokenAddress, uint256 amount);\r\n\r\n    // =============================== Functions ===============================\r\n\r\n    /// @notice Stake an amount of a specific ERC20 token\r\n    /// @param tokenAddress address of the staked token\r\n    /// @param amount staked amount\r\n    function stakeToken(address tokenAddress, uint256 amount)\r\n        public\r\n        returns (uint256)\r\n    {\r\n        require(amount > 0, \"You cannot stake 0 token\");\r\n\r\n        //Transfer amount to smartcontract\r\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount);\r\n\r\n        //Add token if not exist on Smart Contract\r\n        if (!_stakingUserBalance[msg.sender][tokenAddress].isUsed) {\r\n            //Add\r\n            _userToTokenAddress[msg.sender].push(tokenAddress);\r\n\r\n            Token memory userToken = Token(\r\n                tokenAddress,\r\n                amount,\r\n                true,\r\n                block.timestamp\r\n            );\r\n            _stakingUserBalance[msg.sender][tokenAddress] = userToken;\r\n        } else {\r\n            //Update\r\n            _stakingUserBalance[msg.sender][tokenAddress]\r\n                .stakedAmount += amount;\r\n        }\r\n\r\n        // TODO : compute reward\r\n\r\n        //fire event\r\n        emit TokenStaked(tokenAddress, amount);\r\n\r\n        return _stakingUserBalance[msg.sender][tokenAddress].stakedAmount;\r\n    }\r\n\r\n    /// @notice Stake an amount of a specific ERC20 token\r\n    /// @param userAddress address of the user\r\n    /// @param tokenAddress address of the staked token\r\n    function getUserBalance(address userAddress, address tokenAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return _stakingUserBalance[userAddress][tokenAddress].stakedAmount;\r\n    }\r\n\r\n    /// @notice Withdraw an amount of a specific token\r\n    /// @param tokenAddress address of the staked token\r\n    /// @param amount amount to withdraw\r\n    function withdrawTokens(address tokenAddress, uint256 amount) public {\r\n        require(amount > 0, \"You cannot withdraw 0 token !\");\r\n        require(\r\n            _stakingUserBalance[msg.sender][tokenAddress].stakedAmount > 0,\r\n            \"This token never stacked on this contract !\"\r\n        );\r\n        require(\r\n            _stakingUserBalance[msg.sender][tokenAddress].stakedAmount >=\r\n                amount,\r\n            \"Cannot withdraw an amount bigger than stacked !\"\r\n        );\r\n\r\n        IERC20(tokenAddress).transfer(msg.sender, amount);\r\n\r\n        _stakingUserBalance[msg.sender][tokenAddress].stakedAmount -= amount;\r\n        _stakingUserBalance[msg.sender][tokenAddress]\r\n            .lastTransactionDate = block.timestamp;\r\n\r\n        //fire event\r\n        emit TokenWithdrawn(tokenAddress, amount);\r\n    }\r\n\r\n    // ********************* Functions for DAPP *********************\r\n\r\n    /// @notice Return address of RewardToken\r\n    function getSDOTokenAddress() public view returns (address) {\r\n        return address(SdoToken);\r\n    }\r\n\r\n    /// @notice Return list of user's tokens staked on contract\r\n    function getStakedTokens() public view returns (address[] memory) {\r\n        return _userToTokenAddress[msg.sender];\r\n    }\r\n}\r\n",
  "sourcePath": "I:\\Developpement\\GIT\\GitHub\\Alyra\\AlyraStacking\\contracts\\AlyraStaking.sol",
  "ast": {
    "absolutePath": "project:/contracts/AlyraStaking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "AlyraStaking": [
        990
      ],
      "Context": [
        716
      ],
      "ERC20": [
        591
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "PriceConsumerV3": [
        1115
      ]
    },
    "id": 991,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 718,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 719,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 592,
        "src": "60:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 720,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 670,
        "src": "117:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceConsumerV3.sol",
        "file": "./PriceConsumerV3.sol",
        "id": 721,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 1116,
        "src": "175:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AlyraStaking",
        "contractDependencies": [
          1115
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 990,
        "linearizedBaseContracts": [
          990
        ],
        "name": "AlyraStaking",
        "nameLocation": "219:12:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 724,
            "mutability": "mutable",
            "name": "SdoToken",
            "nameLocation": "246:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "239:15:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$669",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 723,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 722,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 669,
                "src": "239:6:5"
              },
              "referencedDeclaration": 669,
              "src": "239:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$669",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "AlyraStaking.Token",
            "id": 733,
            "members": [
              {
                "constant": false,
                "id": 726,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "354:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "346:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 725,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 728,
                "mutability": "mutable",
                "name": "stakedAmount",
                "nameLocation": "385:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "377:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 727,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 730,
                "mutability": "mutable",
                "name": "isUsed",
                "nameLocation": "413:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "408:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 729,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "408:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 732,
                "mutability": "mutable",
                "name": "lastTransactionDate",
                "nameLocation": "438:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "430:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 731,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "329:5:5",
            "nodeType": "StructDefinition",
            "scope": 990,
            "src": "322:143:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44954355",
            "id": 740,
            "mutability": "mutable",
            "name": "_stakingUserBalance",
            "nameLocation": "625:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "572:72:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token))"
            },
            "typeName": {
              "id": 739,
              "keyType": {
                "id": 734,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "580:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "572:45:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token))"
              },
              "valueType": {
                "id": 738,
                "keyType": {
                  "id": 735,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "599:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "591:25:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                  "typeString": "mapping(address => struct AlyraStaking.Token)"
                },
                "valueType": {
                  "id": 737,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 736,
                    "name": "Token",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 733,
                    "src": "610:5:5"
                  },
                  "referencedDeclaration": 733,
                  "src": "610:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Token_$733_storage_ptr",
                    "typeString": "struct AlyraStaking.Token"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 745,
            "mutability": "mutable",
            "name": "_userToTokenAddress",
            "nameLocation": "681:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "651:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 744,
              "keyType": {
                "id": 741,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "659:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "651:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 742,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "670:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 743,
                "nodeType": "ArrayTypeName",
                "src": "670:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 752,
            "mutability": "mutable",
            "name": "priceConsumerV3",
            "nameLocation": "752:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "728:63:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
              "typeString": "contract PriceConsumerV3"
            },
            "typeName": {
              "id": 747,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 746,
                "name": "PriceConsumerV3",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1115,
                "src": "728:15:5"
              },
              "referencedDeclaration": 1115,
              "src": "728:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
                "typeString": "contract PriceConsumerV3"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 750,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "770:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PriceConsumerV3_$1115_$",
                  "typeString": "function () returns (contract PriceConsumerV3)"
                },
                "typeName": {
                  "id": 749,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 748,
                    "name": "PriceConsumerV3",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1115,
                    "src": "774:15:5"
                  },
                  "referencedDeclaration": 1115,
                  "src": "774:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
                    "typeString": "contract PriceConsumerV3"
                  }
                }
              },
              "id": 751,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "770:21:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
                "typeString": "contract PriceConsumerV3"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "872:48:5",
              "statements": [
                {
                  "expression": {
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 757,
                      "name": "SdoToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "883:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 759,
                          "name": "sdoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "901:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 758,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "894:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "894:18:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "883:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "883:29:5"
                }
              ]
            },
            "id": 764,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "sdoAddress",
                  "nameLocation": "860:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "852:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:20:5"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:5"
            },
            "scope": 990,
            "src": "840:80:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 770,
            "name": "TokenStaked",
            "nameLocation": "969:11:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "989:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "981:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1011:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "1003:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:38:5"
            },
            "src": "963:56:5"
          },
          {
            "anonymous": false,
            "id": 776,
            "name": "TokenWithdrawn",
            "nameLocation": "1031:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1054:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 776,
                  "src": "1046:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 774,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1076:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 776,
                  "src": "1068:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:38:5"
            },
            "src": "1025:59:5"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "1435:985:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 787,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 781,
                          "src": "1454:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1463:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1454:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207374616b65203020746f6b656e",
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d",
                          "typeString": "literal_string \"You cannot stake 0 token\""
                        },
                        "value": "You cannot stake 0 token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d",
                          "typeString": "literal_string \"You cannot stake 0 token\""
                        }
                      ],
                      "id": 786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1446:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 797,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1584:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1584:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 801,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1604:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlyraStaking_$990",
                              "typeString": "contract AlyraStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlyraStaking_$990",
                              "typeString": "contract AlyraStaking"
                            }
                          ],
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1596:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1596:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1596:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 803,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "1611:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 794,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "1557:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 793,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "1550:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1550:20:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "1550:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:68:5"
                },
                {
                  "condition": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1687:53:5",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 806,
                            "name": "_stakingUserBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "1688:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                            }
                          },
                          "id": 809,
                          "indexExpression": {
                            "expression": {
                              "id": 807,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1708:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1708:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1688:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                            "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                          }
                        },
                        "id": 811,
                        "indexExpression": {
                          "id": 810,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "1720:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1688:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$733_storage",
                          "typeString": "struct AlyraStaking.Token storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isUsed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 730,
                      "src": "1688:52:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 853,
                    "nodeType": "Block",
                    "src": "2091:135:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 843,
                                  "name": "_stakingUserBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 740,
                                  "src": "2128:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                  }
                                },
                                "id": 847,
                                "indexExpression": {
                                  "expression": {
                                    "id": 844,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2148:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2148:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2128:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                  "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                                }
                              },
                              "id": 848,
                              "indexExpression": {
                                "id": 846,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 779,
                                "src": "2160:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2128:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$733_storage",
                                "typeString": "struct AlyraStaking.Token storage ref"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 728,
                            "src": "2128:76:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 850,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 781,
                            "src": "2208:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2128:86:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 852,
                        "nodeType": "ExpressionStatement",
                        "src": "2128:86:5"
                      }
                    ]
                  },
                  "id": 854,
                  "nodeType": "IfStatement",
                  "src": "1683:543:5",
                  "trueBody": {
                    "id": 842,
                    "nodeType": "Block",
                    "src": "1742:343:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 819,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "1813:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 814,
                                "name": "_userToTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "1776:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 817,
                              "indexExpression": {
                                "expression": {
                                  "id": 815,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1796:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1796:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1776:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1776:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:50:5"
                      },
                      {
                        "assignments": [
                          824
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 824,
                            "mutability": "mutable",
                            "name": "userToken",
                            "nameLocation": "1856:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 842,
                            "src": "1843:22:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_memory_ptr",
                              "typeString": "struct AlyraStaking.Token"
                            },
                            "typeName": {
                              "id": 823,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 822,
                                "name": "Token",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 733,
                                "src": "1843:5:5"
                              },
                              "referencedDeclaration": 733,
                              "src": "1843:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$733_storage_ptr",
                                "typeString": "struct AlyraStaking.Token"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 832,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 826,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "1892:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 827,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 781,
                              "src": "1923:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1948:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 829,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1971:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1971:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 825,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "1868:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Token_$733_storage_ptr_$",
                              "typeString": "type(struct AlyraStaking.Token storage pointer)"
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1868:133:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$733_memory_ptr",
                            "typeString": "struct AlyraStaking.Token memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1843:158:5"
                      },
                      {
                        "expression": {
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 833,
                                "name": "_stakingUserBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "2016:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                }
                              },
                              "id": 837,
                              "indexExpression": {
                                "expression": {
                                  "id": 834,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2036:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2036:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2016:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                              }
                            },
                            "id": 838,
                            "indexExpression": {
                              "id": 836,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "2048:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2016:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_storage",
                              "typeString": "struct AlyraStaking.Token storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 839,
                            "name": "userToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 824,
                            "src": "2064:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_memory_ptr",
                              "typeString": "struct AlyraStaking.Token memory"
                            }
                          },
                          "src": "2016:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$733_storage",
                            "typeString": "struct AlyraStaking.Token storage ref"
                          }
                        },
                        "id": 841,
                        "nodeType": "ExpressionStatement",
                        "src": "2016:57:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 856,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "2313:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "2327:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 855,
                      "name": "TokenStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "2301:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2301:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "EmitStatement",
                  "src": "2296:38:5"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 860,
                          "name": "_stakingUserBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "2354:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                          }
                        },
                        "id": 863,
                        "indexExpression": {
                          "expression": {
                            "id": 861,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2374:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2374:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2354:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                          "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                        }
                      },
                      "id": 865,
                      "indexExpression": {
                        "id": 864,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "2386:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2354:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$733_storage",
                        "typeString": "struct AlyraStaking.Token storage ref"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakedAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 728,
                    "src": "2354:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 785,
                  "id": 867,
                  "nodeType": "Return",
                  "src": "2347:65:5"
                }
              ]
            },
            "documentation": {
              "id": 777,
              "nodeType": "StructuredDocumentation",
              "src": "1176:147:5",
              "text": "@notice Stake an amount of a specific ERC20 token\n @param tokenAddress address of the staked token\n @param amount staked amount"
            },
            "functionSelector": "f739ed9e",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeToken",
            "nameLocation": "1338:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1357:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "1349:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1379:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "1371:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1348:38:5"
            },
            "returnParameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "1421:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1420:9:5"
            },
            "scope": 990,
            "src": "1329:1091:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "2721:85:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 879,
                          "name": "_stakingUserBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "2739:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                          }
                        },
                        "id": 881,
                        "indexExpression": {
                          "id": 880,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "2759:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2739:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                          "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                        }
                      },
                      "id": 883,
                      "indexExpression": {
                        "id": 882,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "2772:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2739:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$733_storage",
                        "typeString": "struct AlyraStaking.Token storage ref"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakedAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 728,
                    "src": "2739:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 878,
                  "id": 885,
                  "nodeType": "Return",
                  "src": "2732:66:5"
                }
              ]
            },
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "2428:158:5",
              "text": "@notice Stake an amount of a specific ERC20 token\n @param userAddress address of the user\n @param tokenAddress address of the staked token"
            },
            "functionSelector": "6805d6ad",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBalance",
            "nameLocation": "2601:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "2624:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2616:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2645:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2637:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2615:43:5"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2707:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2706:9:5"
            },
            "scope": 990,
            "src": "2592:214:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "3038:757:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 896,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "3057:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3066:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3057:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207769746864726177203020746f6b656e2021",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3069:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67",
                          "typeString": "literal_string \"You cannot withdraw 0 token !\""
                        },
                        "value": "You cannot withdraw 0 token !"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67",
                          "typeString": "literal_string \"You cannot withdraw 0 token !\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3049:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3049:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "3049:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 903,
                                "name": "_stakingUserBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "3134:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                }
                              },
                              "id": 906,
                              "indexExpression": {
                                "expression": {
                                  "id": 904,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3154:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3154:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3134:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                              }
                            },
                            "id": 908,
                            "indexExpression": {
                              "id": 907,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "3166:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3134:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_storage",
                              "typeString": "struct AlyraStaking.Token storage ref"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 728,
                          "src": "3134:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3195:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3134:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e206e6576657220737461636b6564206f6e207468697320636f6e74726163742021",
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3211:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0",
                          "typeString": "literal_string \"This token never stacked on this contract !\""
                        },
                        "value": "This token never stacked on this contract !"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0",
                          "typeString": "literal_string \"This token never stacked on this contract !\""
                        }
                      ],
                      "id": 902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3112:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:155:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:155:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 916,
                                "name": "_stakingUserBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "3300:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                }
                              },
                              "id": 919,
                              "indexExpression": {
                                "expression": {
                                  "id": 917,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3320:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3320:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3300:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                              }
                            },
                            "id": 921,
                            "indexExpression": {
                              "id": 920,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "3332:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3300:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_storage",
                              "typeString": "struct AlyraStaking.Token storage ref"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 728,
                          "src": "3300:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 923,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "3379:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3300:85:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420776974686472617720616e20616d6f756e7420626967676572207468616e20737461636b65642021",
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb",
                          "typeString": "literal_string \"Cannot withdraw an amount bigger than stacked !\""
                        },
                        "value": "Cannot withdraw an amount bigger than stacked !"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb",
                          "typeString": "literal_string \"Cannot withdraw an amount bigger than stacked !\""
                        }
                      ],
                      "id": 915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3278:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:182:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:182:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3503:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3503:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 934,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "3515:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 929,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "3480:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 928,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "3473:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3473:20:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 618,
                      "src": "3473:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:49:5"
                },
                {
                  "expression": {
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 937,
                            "name": "_stakingUserBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "3535:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                            }
                          },
                          "id": 941,
                          "indexExpression": {
                            "expression": {
                              "id": 938,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3555:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3555:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3535:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                            "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                          }
                        },
                        "id": 942,
                        "indexExpression": {
                          "id": 940,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "3567:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3535:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$733_storage",
                          "typeString": "struct AlyraStaking.Token storage ref"
                        }
                      },
                      "id": 943,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 728,
                      "src": "3535:58:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 944,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "3597:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3535:68:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:68:5"
                },
                {
                  "expression": {
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 947,
                            "name": "_stakingUserBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "3614:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                            }
                          },
                          "id": 951,
                          "indexExpression": {
                            "expression": {
                              "id": 948,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3634:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3634:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3614:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                            "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                          }
                        },
                        "id": 952,
                        "indexExpression": {
                          "id": 950,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "3646:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3614:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$733_storage",
                          "typeString": "struct AlyraStaking.Token storage ref"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastTransactionDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 732,
                      "src": "3614:79:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 954,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3696:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3696:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3614:97:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:97:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 959,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "3766:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 960,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "3780:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 958,
                      "name": "TokenWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "3751:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3751:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "EmitStatement",
                  "src": "3746:41:5"
                }
              ]
            },
            "documentation": {
              "id": 888,
              "nodeType": "StructuredDocumentation",
              "src": "2814:149:5",
              "text": "@notice Withdraw an amount of a specific token\n @param tokenAddress address of the staked token\n @param amount amount to withdraw"
            },
            "functionSelector": "06b091f9",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nameLocation": "2978:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3001:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "2993:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3023:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "3015:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3015:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2992:38:5"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:5"
            },
            "scope": 990,
            "src": "2969:826:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "3983:43:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 972,
                        "name": "SdoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "4009:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4001:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 970,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4001:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 969,
                  "id": 974,
                  "nodeType": "Return",
                  "src": "3994:24:5"
                }
              ]
            },
            "documentation": {
              "id": 965,
              "nodeType": "StructuredDocumentation",
              "src": "3876:41:5",
              "text": "@notice Return address of RewardToken"
            },
            "functionSelector": "1a21dfb1",
            "id": 976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSDOTokenAddress",
            "nameLocation": "3932:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3950:2:5"
            },
            "returnParameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "3974:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3973:9:5"
            },
            "scope": 990,
            "src": "3923:103:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "4165:57:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 983,
                      "name": "_userToTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "4183:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 986,
                    "indexExpression": {
                      "expression": {
                        "id": 984,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4203:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4203:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4183:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 982,
                  "id": 987,
                  "nodeType": "Return",
                  "src": "4176:38:5"
                }
              ]
            },
            "documentation": {
              "id": 977,
              "nodeType": "StructuredDocumentation",
              "src": "4034:59:5",
              "text": "@notice Return list of user's tokens staked on contract"
            },
            "functionSelector": "0e469a7c",
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedTokens",
            "nameLocation": "4108:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4123:2:5"
            },
            "returnParameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "4147:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 979,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4147:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 980,
                    "nodeType": "ArrayTypeName",
                    "src": "4147:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4146:18:5"
            },
            "scope": 990,
            "src": "4099:123:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 991,
        "src": "210:4015:5",
        "usedErrors": []
      }
    ],
    "src": "33:4194:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/AlyraStaking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "AlyraStaking": [
        990
      ],
      "Context": [
        716
      ],
      "ERC20": [
        591
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "PriceConsumerV3": [
        1115
      ]
    },
    "id": 991,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 718,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 719,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 592,
        "src": "60:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 720,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 670,
        "src": "117:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceConsumerV3.sol",
        "file": "./PriceConsumerV3.sol",
        "id": 721,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 1116,
        "src": "175:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AlyraStaking",
        "contractDependencies": [
          1115
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 990,
        "linearizedBaseContracts": [
          990
        ],
        "name": "AlyraStaking",
        "nameLocation": "219:12:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 724,
            "mutability": "mutable",
            "name": "SdoToken",
            "nameLocation": "246:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "239:15:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$669",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 723,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 722,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 669,
                "src": "239:6:5"
              },
              "referencedDeclaration": 669,
              "src": "239:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$669",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "AlyraStaking.Token",
            "id": 733,
            "members": [
              {
                "constant": false,
                "id": 726,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "354:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "346:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 725,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 728,
                "mutability": "mutable",
                "name": "stakedAmount",
                "nameLocation": "385:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "377:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 727,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 730,
                "mutability": "mutable",
                "name": "isUsed",
                "nameLocation": "413:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "408:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 729,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "408:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 732,
                "mutability": "mutable",
                "name": "lastTransactionDate",
                "nameLocation": "438:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 733,
                "src": "430:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 731,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "329:5:5",
            "nodeType": "StructDefinition",
            "scope": 990,
            "src": "322:143:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44954355",
            "id": 740,
            "mutability": "mutable",
            "name": "_stakingUserBalance",
            "nameLocation": "625:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "572:72:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token))"
            },
            "typeName": {
              "id": 739,
              "keyType": {
                "id": 734,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "580:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "572:45:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token))"
              },
              "valueType": {
                "id": 738,
                "keyType": {
                  "id": 735,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "599:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "591:25:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                  "typeString": "mapping(address => struct AlyraStaking.Token)"
                },
                "valueType": {
                  "id": 737,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 736,
                    "name": "Token",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 733,
                    "src": "610:5:5"
                  },
                  "referencedDeclaration": 733,
                  "src": "610:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Token_$733_storage_ptr",
                    "typeString": "struct AlyraStaking.Token"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 745,
            "mutability": "mutable",
            "name": "_userToTokenAddress",
            "nameLocation": "681:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "651:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 744,
              "keyType": {
                "id": 741,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "659:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "651:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 742,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "670:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 743,
                "nodeType": "ArrayTypeName",
                "src": "670:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 752,
            "mutability": "mutable",
            "name": "priceConsumerV3",
            "nameLocation": "752:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 990,
            "src": "728:63:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
              "typeString": "contract PriceConsumerV3"
            },
            "typeName": {
              "id": 747,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 746,
                "name": "PriceConsumerV3",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1115,
                "src": "728:15:5"
              },
              "referencedDeclaration": 1115,
              "src": "728:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
                "typeString": "contract PriceConsumerV3"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 750,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "770:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PriceConsumerV3_$1115_$",
                  "typeString": "function () returns (contract PriceConsumerV3)"
                },
                "typeName": {
                  "id": 749,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 748,
                    "name": "PriceConsumerV3",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1115,
                    "src": "774:15:5"
                  },
                  "referencedDeclaration": 1115,
                  "src": "774:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
                    "typeString": "contract PriceConsumerV3"
                  }
                }
              },
              "id": 751,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "770:21:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumerV3_$1115",
                "typeString": "contract PriceConsumerV3"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "872:48:5",
              "statements": [
                {
                  "expression": {
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 757,
                      "name": "SdoToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "883:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 759,
                          "name": "sdoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "901:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 758,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "894:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "894:18:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "883:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "883:29:5"
                }
              ]
            },
            "id": 764,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "sdoAddress",
                  "nameLocation": "860:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "852:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:20:5"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:5"
            },
            "scope": 990,
            "src": "840:80:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 770,
            "name": "TokenStaked",
            "nameLocation": "969:11:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "989:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "981:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1011:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "1003:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:38:5"
            },
            "src": "963:56:5"
          },
          {
            "anonymous": false,
            "id": 776,
            "name": "TokenWithdrawn",
            "nameLocation": "1031:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1054:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 776,
                  "src": "1046:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 774,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1076:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 776,
                  "src": "1068:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:38:5"
            },
            "src": "1025:59:5"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "1435:985:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 787,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 781,
                          "src": "1454:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1463:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1454:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207374616b65203020746f6b656e",
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d",
                          "typeString": "literal_string \"You cannot stake 0 token\""
                        },
                        "value": "You cannot stake 0 token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33f9304e6ebba828016727acb1aa5a9147f268f3ef939ac0539a68acacfa363d",
                          "typeString": "literal_string \"You cannot stake 0 token\""
                        }
                      ],
                      "id": 786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1446:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 797,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1584:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1584:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 801,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1604:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlyraStaking_$990",
                              "typeString": "contract AlyraStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlyraStaking_$990",
                              "typeString": "contract AlyraStaking"
                            }
                          ],
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1596:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1596:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1596:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 803,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "1611:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 794,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "1557:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 793,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "1550:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1550:20:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "1550:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:68:5"
                },
                {
                  "condition": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1687:53:5",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 806,
                            "name": "_stakingUserBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "1688:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                            }
                          },
                          "id": 809,
                          "indexExpression": {
                            "expression": {
                              "id": 807,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1708:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1708:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1688:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                            "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                          }
                        },
                        "id": 811,
                        "indexExpression": {
                          "id": 810,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "1720:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1688:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$733_storage",
                          "typeString": "struct AlyraStaking.Token storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isUsed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 730,
                      "src": "1688:52:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 853,
                    "nodeType": "Block",
                    "src": "2091:135:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 843,
                                  "name": "_stakingUserBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 740,
                                  "src": "2128:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                  }
                                },
                                "id": 847,
                                "indexExpression": {
                                  "expression": {
                                    "id": 844,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2148:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2148:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2128:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                  "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                                }
                              },
                              "id": 848,
                              "indexExpression": {
                                "id": 846,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 779,
                                "src": "2160:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2128:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$733_storage",
                                "typeString": "struct AlyraStaking.Token storage ref"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 728,
                            "src": "2128:76:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 850,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 781,
                            "src": "2208:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2128:86:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 852,
                        "nodeType": "ExpressionStatement",
                        "src": "2128:86:5"
                      }
                    ]
                  },
                  "id": 854,
                  "nodeType": "IfStatement",
                  "src": "1683:543:5",
                  "trueBody": {
                    "id": 842,
                    "nodeType": "Block",
                    "src": "1742:343:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 819,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "1813:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 814,
                                "name": "_userToTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "1776:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 817,
                              "indexExpression": {
                                "expression": {
                                  "id": 815,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1796:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1796:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1776:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1776:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:50:5"
                      },
                      {
                        "assignments": [
                          824
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 824,
                            "mutability": "mutable",
                            "name": "userToken",
                            "nameLocation": "1856:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 842,
                            "src": "1843:22:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_memory_ptr",
                              "typeString": "struct AlyraStaking.Token"
                            },
                            "typeName": {
                              "id": 823,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 822,
                                "name": "Token",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 733,
                                "src": "1843:5:5"
                              },
                              "referencedDeclaration": 733,
                              "src": "1843:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$733_storage_ptr",
                                "typeString": "struct AlyraStaking.Token"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 832,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 826,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "1892:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 827,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 781,
                              "src": "1923:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1948:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 829,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1971:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1971:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 825,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "1868:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Token_$733_storage_ptr_$",
                              "typeString": "type(struct AlyraStaking.Token storage pointer)"
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1868:133:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$733_memory_ptr",
                            "typeString": "struct AlyraStaking.Token memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1843:158:5"
                      },
                      {
                        "expression": {
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 833,
                                "name": "_stakingUserBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "2016:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                }
                              },
                              "id": 837,
                              "indexExpression": {
                                "expression": {
                                  "id": 834,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2036:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2036:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2016:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                              }
                            },
                            "id": 838,
                            "indexExpression": {
                              "id": 836,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "2048:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2016:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_storage",
                              "typeString": "struct AlyraStaking.Token storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 839,
                            "name": "userToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 824,
                            "src": "2064:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_memory_ptr",
                              "typeString": "struct AlyraStaking.Token memory"
                            }
                          },
                          "src": "2016:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$733_storage",
                            "typeString": "struct AlyraStaking.Token storage ref"
                          }
                        },
                        "id": 841,
                        "nodeType": "ExpressionStatement",
                        "src": "2016:57:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 856,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "2313:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "2327:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 855,
                      "name": "TokenStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "2301:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2301:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "EmitStatement",
                  "src": "2296:38:5"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 860,
                          "name": "_stakingUserBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "2354:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                          }
                        },
                        "id": 863,
                        "indexExpression": {
                          "expression": {
                            "id": 861,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2374:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2374:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2354:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                          "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                        }
                      },
                      "id": 865,
                      "indexExpression": {
                        "id": 864,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "2386:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2354:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$733_storage",
                        "typeString": "struct AlyraStaking.Token storage ref"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakedAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 728,
                    "src": "2354:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 785,
                  "id": 867,
                  "nodeType": "Return",
                  "src": "2347:65:5"
                }
              ]
            },
            "documentation": {
              "id": 777,
              "nodeType": "StructuredDocumentation",
              "src": "1176:147:5",
              "text": "@notice Stake an amount of a specific ERC20 token\n @param tokenAddress address of the staked token\n @param amount staked amount"
            },
            "functionSelector": "f739ed9e",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeToken",
            "nameLocation": "1338:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1357:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "1349:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1379:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "1371:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1348:38:5"
            },
            "returnParameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "1421:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1420:9:5"
            },
            "scope": 990,
            "src": "1329:1091:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "2721:85:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 879,
                          "name": "_stakingUserBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "2739:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                          }
                        },
                        "id": 881,
                        "indexExpression": {
                          "id": 880,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "2759:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2739:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                          "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                        }
                      },
                      "id": 883,
                      "indexExpression": {
                        "id": 882,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "2772:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2739:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$733_storage",
                        "typeString": "struct AlyraStaking.Token storage ref"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakedAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 728,
                    "src": "2739:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 878,
                  "id": 885,
                  "nodeType": "Return",
                  "src": "2732:66:5"
                }
              ]
            },
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "2428:158:5",
              "text": "@notice Stake an amount of a specific ERC20 token\n @param userAddress address of the user\n @param tokenAddress address of the staked token"
            },
            "functionSelector": "6805d6ad",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBalance",
            "nameLocation": "2601:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "2624:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2616:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2645:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2637:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2615:43:5"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2707:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2706:9:5"
            },
            "scope": 990,
            "src": "2592:214:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "3038:757:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 896,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "3057:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3066:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3057:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207769746864726177203020746f6b656e2021",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3069:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67",
                          "typeString": "literal_string \"You cannot withdraw 0 token !\""
                        },
                        "value": "You cannot withdraw 0 token !"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c93dc214e5312c894beebb7c472b040b2eb4924b71688361386cf20e69c1c67",
                          "typeString": "literal_string \"You cannot withdraw 0 token !\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3049:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3049:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "3049:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 903,
                                "name": "_stakingUserBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "3134:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                }
                              },
                              "id": 906,
                              "indexExpression": {
                                "expression": {
                                  "id": 904,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3154:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3154:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3134:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                              }
                            },
                            "id": 908,
                            "indexExpression": {
                              "id": 907,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "3166:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3134:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_storage",
                              "typeString": "struct AlyraStaking.Token storage ref"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 728,
                          "src": "3134:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3195:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3134:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e206e6576657220737461636b6564206f6e207468697320636f6e74726163742021",
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3211:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0",
                          "typeString": "literal_string \"This token never stacked on this contract !\""
                        },
                        "value": "This token never stacked on this contract !"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf4f5d5fdc6db69c800c87d6a7c71eee806ab9c9124c3f779ead467b2e954db0",
                          "typeString": "literal_string \"This token never stacked on this contract !\""
                        }
                      ],
                      "id": 902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3112:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:155:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:155:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 916,
                                "name": "_stakingUserBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "3300:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                                }
                              },
                              "id": 919,
                              "indexExpression": {
                                "expression": {
                                  "id": 917,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3320:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3320:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3300:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                                "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                              }
                            },
                            "id": 921,
                            "indexExpression": {
                              "id": 920,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "3332:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3300:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$733_storage",
                              "typeString": "struct AlyraStaking.Token storage ref"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 728,
                          "src": "3300:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 923,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "3379:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3300:85:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420776974686472617720616e20616d6f756e7420626967676572207468616e20737461636b65642021",
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb",
                          "typeString": "literal_string \"Cannot withdraw an amount bigger than stacked !\""
                        },
                        "value": "Cannot withdraw an amount bigger than stacked !"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea27a08256c97b83a1165c79dbaa11f9f13ee038f38d99f1d96ca17338675dfb",
                          "typeString": "literal_string \"Cannot withdraw an amount bigger than stacked !\""
                        }
                      ],
                      "id": 915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3278:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:182:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:182:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3503:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3503:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 934,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "3515:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 929,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "3480:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 928,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "3473:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3473:20:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 618,
                      "src": "3473:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:49:5"
                },
                {
                  "expression": {
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 937,
                            "name": "_stakingUserBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "3535:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                            }
                          },
                          "id": 941,
                          "indexExpression": {
                            "expression": {
                              "id": 938,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3555:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3555:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3535:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                            "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                          }
                        },
                        "id": 942,
                        "indexExpression": {
                          "id": 940,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "3567:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3535:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$733_storage",
                          "typeString": "struct AlyraStaking.Token storage ref"
                        }
                      },
                      "id": 943,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 728,
                      "src": "3535:58:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 944,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "3597:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3535:68:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:68:5"
                },
                {
                  "expression": {
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 947,
                            "name": "_stakingUserBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "3614:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Token_$733_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct AlyraStaking.Token storage ref))"
                            }
                          },
                          "id": 951,
                          "indexExpression": {
                            "expression": {
                              "id": 948,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3634:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3634:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3614:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$733_storage_$",
                            "typeString": "mapping(address => struct AlyraStaking.Token storage ref)"
                          }
                        },
                        "id": 952,
                        "indexExpression": {
                          "id": 950,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "3646:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3614:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$733_storage",
                          "typeString": "struct AlyraStaking.Token storage ref"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastTransactionDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 732,
                      "src": "3614:79:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 954,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3696:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3696:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3614:97:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:97:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 959,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "3766:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 960,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "3780:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 958,
                      "name": "TokenWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "3751:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3751:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "EmitStatement",
                  "src": "3746:41:5"
                }
              ]
            },
            "documentation": {
              "id": 888,
              "nodeType": "StructuredDocumentation",
              "src": "2814:149:5",
              "text": "@notice Withdraw an amount of a specific token\n @param tokenAddress address of the staked token\n @param amount amount to withdraw"
            },
            "functionSelector": "06b091f9",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nameLocation": "2978:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3001:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "2993:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3023:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "3015:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3015:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2992:38:5"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:5"
            },
            "scope": 990,
            "src": "2969:826:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "3983:43:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 972,
                        "name": "SdoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "4009:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4001:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 970,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4001:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 969,
                  "id": 974,
                  "nodeType": "Return",
                  "src": "3994:24:5"
                }
              ]
            },
            "documentation": {
              "id": 965,
              "nodeType": "StructuredDocumentation",
              "src": "3876:41:5",
              "text": "@notice Return address of RewardToken"
            },
            "functionSelector": "1a21dfb1",
            "id": 976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSDOTokenAddress",
            "nameLocation": "3932:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3950:2:5"
            },
            "returnParameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "3974:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3973:9:5"
            },
            "scope": 990,
            "src": "3923:103:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "4165:57:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 983,
                      "name": "_userToTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "4183:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 986,
                    "indexExpression": {
                      "expression": {
                        "id": 984,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4203:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4203:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4183:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 982,
                  "id": 987,
                  "nodeType": "Return",
                  "src": "4176:38:5"
                }
              ]
            },
            "documentation": {
              "id": 977,
              "nodeType": "StructuredDocumentation",
              "src": "4034:59:5",
              "text": "@notice Return list of user's tokens staked on contract"
            },
            "functionSelector": "0e469a7c",
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedTokens",
            "nameLocation": "4108:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4123:2:5"
            },
            "returnParameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "4147:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 979,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4147:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 980,
                    "nodeType": "ArrayTypeName",
                    "src": "4147:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4146:18:5"
            },
            "scope": 990,
            "src": "4099:123:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 991,
        "src": "210:4015:5",
        "usedErrors": []
      }
    ],
    "src": "33:4194:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x480fe9b354705fD865736430C1FFfE308C27C680",
      "transactionHash": "0x8e639cab4fd751e78874e5129f9e80510b5197c829050d8730615f6f26023237"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-19T08:39:15.706Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getUserBalance(address,address)": {
        "params": {
          "tokenAddress": "address of the staked token",
          "userAddress": "address of the user"
        }
      },
      "stakeToken(address,uint256)": {
        "params": {
          "amount": "staked amount",
          "tokenAddress": "address of the staked token"
        }
      },
      "withdrawTokens(address,uint256)": {
        "params": {
          "amount": "amount to withdraw",
          "tokenAddress": "address of the staked token"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getSDOTokenAddress()": {
        "notice": "Return address of RewardToken"
      },
      "getStakedTokens()": {
        "notice": "Return list of user's tokens staked on contract"
      },
      "getUserBalance(address,address)": {
        "notice": "Stake an amount of a specific ERC20 token"
      },
      "stakeToken(address,uint256)": {
        "notice": "Stake an amount of a specific ERC20 token"
      },
      "withdrawTokens(address,uint256)": {
        "notice": "Withdraw an amount of a specific token"
      }
    },
    "version": 1
  }
}